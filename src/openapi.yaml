openapi: 3.0.3


info:
  title: ManageItems
  version: 0.1.0

paths:
  /items:
    description: For managing items.


    get:
      description: Get list of items.
      x-eov-operation-handler: endpoints
      operationId: listItems
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemArray'


    post:
      x-eov-operation-handler: endpoints
      operationId: createItem
      requestBody:
        content:
          application/json:
            examples:
              soup:
                value:
                  name: Soup
              tuna:
                value:
                  name: Tuna
              bread:
                value:
                  name: Bread
            schema:
              $ref: '#/components/schemas/ItemData'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Created.
          headers:
            Location:
              description: URI of new item.
              explode: false
              required: true
              schema:
                minLength: 1
                nullable: false
                type: string
              style: simple
        "400":
          description: Bad requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EovError'


components:
  schemas:

    ItemData:
      description: Item data without an _id.
      example: {
        "name": "Canned tuna"
      }
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ItemName"
      required:
        - name

    ItemArray:
      type: array
      nullable: false
      items:
        $ref: '#/components/schemas/Item'

    Item:
      example: {
        "name": "Canned tuna",
        "_id": "0123456789aBcDeF01234567"
      }
      properties:
        _id:
          $ref: "#/components/schemas/MongoId"
        name:
          $ref: "#/components/schemas/ItemName"
      required:
        - _id
        - name
      type: object

    ItemName:
      description: Name of the item.
      example: Canned tuna
      maxLength: 128
      minLength: 1
      nullable: false
      # Must contain at least one non-whitespace character.
      pattern: \S+
      type: string

    MongoId:
      description: Unique identifier consisting of a 24 digit hexidecimal values (a
        MongoDB stingified ObjectID)
      example: 0123456789aBcDeF01234567
      maxLength: 24
      minLength: 24
      nullable: false
      pattern: ^[a-zA-Z0-9]+$
      type: string

    EovError:
      description: Not Acceptable
      type: object
      example: {
        "message": ".response should have required property 'name', .response should have required property 'id'",
        "errors": [
          {
            "path": ".response.name",
            "message": "should have required property 'name'",
            "errorCode": "required.openapi.validation"
          },
          {
            "path": ".response.id",
            "message": "should have required property 'id'",
            "errorCode": "required.openapi.validation"
          }
        ]
      }
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              message:
                type: string
              errorCode:
                type: "string"
